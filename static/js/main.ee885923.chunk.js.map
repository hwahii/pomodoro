{"version":3,"sources":["icons/tomato_small_gray.svg","icons/tomato_small_color.svg","icons/add_red.svg","icons/list_white.svg","icons/analysis_white.svg","icons/ringtone_white.svg","icons/arrow.svg","icons/start_red.svg","icons/pause_gray.svg","icons/reset_gray.svg","icons/complete.svg","components/NavBar.js","components/NoTask.js","components/PomodoroTimer.js","components/MainPanel.js","components/AddTask.js","components/TaskList.js","components/Analytics.js","components/Ringtones.js","components/SubContent.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","react_router_dom","to","src","addRedIcon","alt","listWhiteIcon","analysisWhiteIcon","ringtoneWhiteIcon","TomatoSmallColor","arrowIcon","NoTask","PomodoroTimer","startRedIcon","pauseGrayIcon","resetGrayIcon","completeIcon","Tomato","props","timerMode","components_PomodoroTimer","components_NoTask","MainPanel","this","React","Component","AddTask","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addTask","bind","assertThisInitialized","onTimerModeChange","placeholder","TomatoSmallGray","onClick","TaskList","Analytics","Ringtones","SubContent","_this2","react_router","path","render","components_AddTask","component","timerModeNames","b","n","App","handleTimerModeChange","state","setState","components_MainPanel","components_NavBar","components_SubContent","Boolean","window","location","hostname","match","ReactDOM","basename","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee885923.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tomato_small_gray.3ab2cbcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato_small_color.cc90d8a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_red.30013910.svg\";","module.exports = __webpack_public_path__ + \"static/media/list_white.99b596ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/analysis_white.522ba8be.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringtone_white.c1791935.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.ad7dbdf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/start_red.c7b4294f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause_gray.13d1f6b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset_gray.5435d644.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete.cb415344.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport addRedIcon from \"../icons/add_red.svg\";\n// import addWhiteIcon from \"../icons/add_white.svg\";\n// import listRedIcon from \"../icons/list_red.svg\";\nimport listWhiteIcon from \"../icons/list_white.svg\";\n// import analysisRedIcon from \"../icons/analysis_red.svg\";\nimport analysisWhiteIcon from \"../icons/analysis_white.svg\";\n// import ringtoneRedIcon from \"../icons/ringtone_red.svg\";\nimport ringtoneWhiteIcon from \"../icons/ringtone_white.svg\";\nimport arrowIcon from \"../icons/arrow.svg\";\nimport TomatoSmallColor from \"../icons/tomato_small_color.svg\";\n\nconst NavBar = () => (\n  <div className=\"sub-nav\">\n    <nav className=\"nav\">\n      <ul>\n        <li>\n          <Link to=\"/add\">\n            <img src={addRedIcon} alt=\"add\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/list\">\n            <img src={listWhiteIcon} alt=\"list\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/analytics\">\n            <img src={analysisWhiteIcon} alt=\"analytics\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/ringtones\">\n            <img src={ringtoneWhiteIcon} alt=\"ringtones\" />\n          </Link>\n        </li>\n      </ul>\n      <div className=\"toggle-tag\">\n        <img src={TomatoSmallColor} alt=\"tomatoSmallColor\" />\n        <div className=\"arrow\">\n          <img src={arrowIcon} alt=\"arrow\" />\n        </div>\n      </div>\n    </nav>\n  </div>\n);\n\nexport default NavBar;\n","import React from \"react\";\nimport TomatoSmallColor from \"../icons/tomato_small_color.svg\";\n\nconst NoTask = () => (\n  <div className=\"main-panel\">\n    <div className=\"pomodoro-box\">\n      <div className=\"no-task-pomodoro-top-margin\" />\n      <div className=\"no-task-pomodoro-box\">\n        <img\n          className=\"pomodoro-init\"\n          src={TomatoSmallColor}\n          alt=\"tomatoSmallColor\"\n        />\n        <div className=\"no-task-logo\">\n          <div>POMODORO</div>\n        </div>\n      </div>\n      <div className=\"no-task-pomodoro-message-margin\" />\n      <div className=\"message\">\n        You don’t have any task now,\n        <br />\n        please add task first!\n      </div>\n      <div className=\"no-task-msg-slogo-margin\" />\n      <div className=\"small-logo\">\n        <div className=\"lato\">POMODORO</div>\n      </div>\n    </div>\n  </div>\n);\nexport default NoTask;\n","import React from \"react\";\nimport \"./css-circular-prog-bar.css\";\nimport startRedIcon from \"../icons/start_red.svg\";\nimport pauseGrayIcon from \"../icons/pause_gray.svg\";\nimport resetGrayIcon from \"../icons/reset_gray.svg\";\nimport completeIcon from \"../icons/complete.svg\";\n\nconst PomodoroTimer = () => (\n  <div className=\"main-panel\">\n    <div className=\"pomodoro-timer-box\">\n      <div className=\"timer-top-tasktext-margin\" />\n      <div className=\"timer-task-text\">My First Task</div>\n      <div className=\"timer-tasktext-tasktomatos-margin\" />\n      <div className=\"timer-task-tomatos\">O O O O</div>\n      <div className=\"timer-tomatos-pomodoro-margin\" />\n      <div>\n        <div className=\"progress-circle p75 over50\">\n          <span>06:25</span>\n          <div className=\"left-half-clipper\">\n            <div className=\"first50-bar\" />\n            <div className=\"value-bar\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"timer-pomodoro-buttons-margin\" />\n      <div className=\"timer-buttons\">\n        <div className=\"small-circlebutton\">\n          <img src={startRedIcon} alt=\"start\" />\n        </div>\n        <div className=\"small-circlebutton\">\n          <img src={pauseGrayIcon} alt=\"pause\" />\n        </div>\n        <div className=\"small-circlebutton\">\n          <img src={resetGrayIcon} alt=\"reset\" />\n        </div>\n      </div>\n      <div className=\"timer-buttons-complete-margin\" />\n      <div className=\"timer-complete-box\">\n        <div className=\"timer-complete-img\">\n          <img src={completeIcon} alt=\"taskcomplete\" />\n        </div>\n        <div className=\"timer-complete-text\">TASK COMPLETE</div>\n      </div>\n      <div className=\"timer-complete-slogo-margin\" />\n      <div className=\"small-logo\">\n        <div>POMODORO</div>\n      </div>\n    </div>\n  </div>\n);\nexport default PomodoroTimer;\n","import React from \"react\";\nimport NoTask from './NoTask';\nimport PomodoroTimer from './PomodoroTimer';\nimport \"./App.css\";\n\nclass MainPanel extends React.Component {\n  render() {\n    const timerMode = this.props.timerMode;\n    return <Tomato timerMode={timerMode} />;\n  }\n}\n\nfunction Tomato(props) {\n  const timerMode = props.timerMode;\n  if (timerMode === \"PomodoroTimer\") {\n    return <PomodoroTimer />;\n  } else if (timerMode === \"NoTask\") {\n    return <NoTask />;\n  }\n}\n\nexport default MainPanel;","import React from \"react\";\nimport \"./App.css\";\nimport TomatoSmallColor from \"../icons/tomato_small_color.svg\";\nimport TomatoSmallGray from \"../icons/tomato_small_gray.svg\";\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n  }\n  addTask() {\n    this.props.onTimerModeChange(\"PomodoroTimer\");\n  }\n  render() {\n    return (\n      <div className=\"sub-content\">\n        <div className=\"sub-content-box\">\n          <div className=\"sub-content-title\">ADD NEW TASK</div>\n          <div className=\"sub-content-separation\" />\n          <div className=\"sub-content-sub-title\">TASK TITLE</div>\n          <input className=\"sub-content-input\" placeholder=\"My Second Task\" />\n          <div className=\"sub-content-margin\" />\n          <div className=\"sub-content-sub-title\">ESTIMATED TOMOTO</div>\n          <div className=\"estimated-tomoto-inline\">\n            <img src={TomatoSmallColor} alt=\"tomatoSmallColor\" />\n            <img src={TomatoSmallColor} alt=\"tomatoSmallColor\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n            <img src={TomatoSmallGray} alt=\"tomatoSmallGray\" />\n          </div>\n          <div className=\"sub-content-margin\" />\n          <div className=\"sub-content-margin\" />\n          <div>\n            <button className=\"add-task-button\" onClick={this.addTask}>\n              ADD TASK\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AddTask;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass TaskList extends React.Component {\n  render() {\n    return (\n      <div className=\"sub-content\">\n        <div className=\"sub-content-box\">\n          <div className=\"sub-content-title\">TASK LISTS</div>\n          <div className=\"sub-content-separation\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass Analytics extends React.Component {\n  render() {\n    return (\n      <div className=\"sub-content\">\n        <div className=\"sub-content-box\">\n          <div className=\"sub-content-title\">ANALYTICS REPORT</div>\n          <div className=\"sub-content-separation\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass Ringtones extends React.Component {\n  render() {\n    return (\n      <div className=\"sub-content\">\n        <div className=\"sub-content-box\">\n          <div className=\"sub-content-title\">RING TONE</div>\n          <div className=\"sub-content-separation\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ringtones;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport TomatoSmallColor from \"../icons/tomato_small_color.svg\";\nimport TomatoSmallGray from \"../icons/tomato_small_gray.svg\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport Analytics from \"./Analytics\";\nimport Ringtones from \"./Ringtones\";\n\nclass SubContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n  }\n  addTask() {\n    this.props.onTimerModeChange(\"PomodoroTimer\");\n  }\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/add\" render={(props) => (<AddTask onTimerModeChange={this.addTask} />)} />\n        <Route path=\"/list\" component={TaskList} />\n        <Route path=\"/analytics\" component={Analytics} />\n        <Route path=\"/ringtones\" component={Ringtones} />\n      </Switch>\n    );\n  }\n}\n\nexport default SubContent;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\nimport MainPanel from './MainPanel';\nimport SubContent from './SubContent';\n\nconst timerModeNames = {\n  p: \"PomodoroTimer\",\n  b: \"BreakTimer\",\n  n: \"NoTask\"\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTimerModeChange = this.handleTimerModeChange.bind(this);\n    this.state = { timerMode: timerModeNames.n };\n  }\n\n  handleTimerModeChange(timerMode) {\n    this.setState({ timerMode: timerMode });\n  }\n  render() {\n    const timerMode = this.state.timerMode;\n    return (\n      <div className=\"container\">\n        <MainPanel timerMode={timerMode} />\n        <NavBar />\n        <div className=\"sub-panel-border\" />\n        <SubContent onTimerModeChange={this.handleTimerModeChange} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/pomodoro\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}